openapi: 3.0.3
info:
  title: F1 Betting API
  version: 1.0.0
  description: API for placing and simulating F1 betting based on OpenF1 data.
servers:
  - url: http://localhost:8080
    description: Local Dev Server

paths:
  /api/bets/events:
    get:
      summary: List F1 events (sessions) with drivers and odds
      parameters:
        - name: sessionType
          in: query
          required: false
          description: Filter by session type (e.g., RACE, QUALIFYING)
          schema:
            type: string
        - name: year
          in: query
          required: false
          description: Filter by year (e.g., 2024)
          schema:
            type: integer
        - name: country
          in: query
          required: false
          description: Filter by country name (e.g., UK)
          schema:
            type: string
      responses:
        '200':
          description: A list of F1 events with driver markets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventWithDrivers'

  /api/bets/place:
    post:
      summary: Place a bet on a driver for a session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaceBetRequest'
      responses:
        '200':
          description: The placed bet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bet'

  /api/bets/simulate:
    post:
      summary: Simulate the result of an event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimulateRequest'
      responses:
        '200':
          description: Simulation successful

components:
  schemas:
    PlaceBetRequest:
      type: object
      required: [userId, eventId, driverId, amount]
      properties:
        userId:
          type: string
          format: uuid
        eventId:
          type: string
          format: uuid
        driverId:
          type: string
          format: uuid
        amount:
          type: number
          format: double

    SimulateRequest:
      type: object
      required: [eventId, winningDriverId]
      properties:
        eventId:
          type: string
          format: uuid
        winningDriverId:
          type: string
          format: uuid

    Bet:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        eventId:
          type: string
          format: uuid
        driverId:
          type: string
          format: uuid
        amount:
          type: number
        odds:
          type: string
          enum: [TWO, THREE, FOUR]
        status:
          type: string
          enum: [PLACED, WON, LOST]

    DriverMarket:
      type: object
      properties:
        driverId:
          type: string
          format: uuid
        fullName:
          type: string
        odds:
          type: integer
          enum: [2, 3, 4]

    F1Event:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        country:
          type: string
        sessionType:
          type: string
        year:
          type: integer

    EventWithDrivers:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/F1Event'
        drivers:
          type: array
          items:
            $ref: '#/components/schemas/DriverMarket'